{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tHead","headings","rows","cells","tableBody","workersData","tBodies","Employee","fullName","position","age","salary","name","getSalaryNum","str","slice","split","join","num","toString","replace","employees","map","el","getWorkerInfo","workerData","innerText","sort","workers","value","a","b","localeCompare","addEventListener","clickEvent","target","condition","toLowerCase","forEach","style","color","onmouseover","innerHTML","getSalaryStr"],"mappings":"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","file":"main.1175a14c.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tHead = table.tHead;\nconst headings = [...tHead.rows[0].cells];\nconst tableBody = document.querySelector('tbody');\nconst workersData = () => [...table.tBodies[0].rows];\n\nclass Employee {\n  constructor(fullName, position, age, salary) {\n    this.name = fullName;\n    this.position = position;\n    this.age = +age;\n    this.salary = this.getSalaryNum(salary);\n  }\n\n  getSalaryNum(str) {\n    return +str.slice(1).split(',').join('');\n  }\n\n  getSalaryStr(num) {\n    return '$' + num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n}\n\nconst employees = workersData().map(el => {\n  const [fullName, position, age, salary] = getWorkerInfo([...el.cells]);\n\n  return new Employee(fullName, position, age, salary);\n});\n\ntHead.addEventListener('click', (clickEvent) => {\n  const target = clickEvent.target;\n  const condition = target.innerText.toLowerCase();\n\n  headings.forEach(el => {\n    if (el === target) {\n      el.style.color = '#fff400';\n    } else {\n      el.style.color = '#fff';\n    }\n\n    el.onmouseover = () => {\n      el.style.color = '#fff400';\n    };\n  });\n\n  tableBody.innerHTML = `\n  ${sort(employees, condition).map(el => `\n    <tr>\n      <td>${el.name}</td>\n      <td>${el.position}</td>\n      <td>${el.age}</td>\n      <td>${el.getSalaryStr(el.salary)}</td>\n    </tr>\n  `).join('')}\n  `;\n});\n\nfunction getWorkerInfo(workerData) {\n  return workerData.map(el => el.innerText);\n}\n\nfunction sort(workers, value) {\n  return workers.sort(\n    ({ [value]: a }, { [value]: b }) => typeof a === 'string'\n      ? a.localeCompare(b)\n      : a - b\n  );\n}\n"]}